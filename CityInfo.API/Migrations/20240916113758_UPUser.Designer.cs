// <auto-generated />
using CityInfo.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInfo.API.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    [Migration("20240916113758_UPUser")]
    partial class UPUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("CityInfo.API.Entites.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Here is karaj",
                            Name = "Karaj"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Here is Tehran",
                            Name = "Tehran"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Here is Mashad",
                            Name = "Mashad"
                        });
                });

            modelBuilder.Entity("CityInfo.API.Entites.CityInfoUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("CityUsers");
                });

            modelBuilder.Entity("CityInfo.API.Entites.PointOfIntrest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointOfIntrests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Baraghan"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Name = "Talaghan"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Name = "Lavasan"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            Name = "Azadi"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            Name = "Idont know abad"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 3,
                            Name = "Idont know abad 2"
                        });
                });

            modelBuilder.Entity("CityInfo.API.Entites.PointOfIntrest", b =>
                {
                    b.HasOne("CityInfo.API.Entites.City", "City")
                        .WithMany("PointOfIntrests")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityInfo.API.Entites.City", b =>
                {
                    b.Navigation("PointOfIntrests");
                });
#pragma warning restore 612, 618
        }
    }
}
